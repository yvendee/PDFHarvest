Create structured output in the following format, ensuring each line adheres to the specified structure. Do not omit any brackets or any other elements. Follow this exact format:

Complete this:

[maid name]: x , ##Get this value from the 'Name'
[maid ref code]:  x , #Get this value from 'Code' or 'Ref. No.' or 'Reference Code' field. It's usually located at the header of the first page or top of the image. If the reference code is not found, return to null.
[maid type option id]: x , #if not specifically stated then use the following logic. If the maid is currently working in Singapore then return “Transfer Maid”, else if maid has worked in Singapore previously then return “Ex Maid”, else return “New Maid”. Make sure to check the employment history and work experience for the details.
[maid agency]: x , #if not found, leave as null
[availability status id]: x , #One week|2 Weeks|4 5weeks|5 6weeks|Immediate. return "Other" if not found or invalid or not within the accepted values.
[nationality id]: x , #Filipino|Indonesian|Myanmarese|Indian|Bangladeshi|Sri Lankan|Cambodian|Thai|Malaysian
[birth date]: x, # The date format is dd/MM/YYYY. Read each of the numbers carefully especially 0, 8, 9 and 6  to ensure accuracy.
[birth place]: x , # if not found, return "null"
[siblings count]: x, # Get this value from the 'Number of siblings' field. If it says '1 of 3 siblings', understand it and return the number of siblings, e.g., if you're 1 of 3 siblings means you have 2 siblings.
[children count]: x , # if not found, return "null"
[children ages]: x , # if not found, return "null"
[height]: x , #in cm and remove units and If not found just set "150"
[weight]: x , #in kg and remove units and If not found just set "Null"
[rest day]: x,  #  1 | 2 | 3 | 4 | 0 rest days per month
[religion id]: x , #Buddhist|Catholic|Christian|Free Thinker|Hindu|Muslim|Sikh|Others if invalid or not found. Get this value from Religion field. If value is Moslem, understand it as Muslim. Check for typos and edit if necessary as long as the value is within the accepted values.
[marital status id]: x, # Accepted values: Single|Married|Widowed|Single Parent|Divorced|Separated. Get this value from "Marital status" or the commonly misspelled "Marrital Status". Recognize and correct common typos and lowercases: "Merried" and "married" should return "Married", "Divorce" and "divorce" should return "Divorced", "single parent" should return "Single Parent", "Widow" and "widow" should return "Widowed". Ensure that the return value is within the accepted values.
[education id]:  x, #Accepted values: Secondary level (8~9 yrs)|High School (10~12 yrs)|College/Degree (>=13 yrs)|Others. If possible, check thoroughly in the first page and get the value from the last education section or from the Education level field. If you understand it as a bachelor in science (e.g., BSC) or College Undergraduate or University Undergraduate, return "College/Degree (>=13 yrs)." If you understand it as Junior High School or Senior High School or High School (10~12 Yrs) or High School (1012 Yrs) or 10-12 or 10-12 Yrs or High School (10-12 Yrs), return "High School (10~12 yrs)." If you understand it as class 8 or class 9 or 8th or 9th, return Secondary level (8~9 yrs).  If the value is invalid or not found, adjust the format to use ~ instead of hyphens and ensure "yrs" is not capitalized. Match the accepted values. If it still doesn't match, return "Others". 
[education info]: x , # more detailed
[maid current salary]: x , # if not found, return "null"
[maid current rest day id]: x , #1 rest days per month|2 rest days per month|3 rest days per month|4 rest days per month|0 rest days per month, return 0 rest days per month if not found or invalid
[maid preferred rest day id]: x , #1 rest days per month|2 rest days per month|3 rest days per month|4 rest days per month|0 rest days per month, return 0 rest days per month if not found or invalid
[home address]: x , # if not found, return "null"
[home number]: x , # if not found, return "null"
[home contacts]: x , # if not found, return "null"
[repatriate]: x , # if not found, return "null"
[maid passport number]: x , # if not found, return "null"
[maid passport expiry]: x , # if not found, return "null"
[maid work permit number]: x , # if not found, return "null"
[maid work permit expiry]: x , # if not found, return "null"
[is youtube video]: x , # if not found, return "null"
[youtube link]: x , # if not found, return "null"
[language english experience]: x, # Get the integer number of years from the 'Experience' column in the same row as 'Language abilities (spoken)' and return in the format '2yr 6mo' if years and months are specified or '2yr 0mo' if only years are specified. Check the first table first; if not found or the table is empty, check the second table. If not found, return "0yr 0mo".
[language english stars]: x, # Get the integer value from the 'Assessment/Observation' column in the same row as the 'Language Abilities (spoken)' entry. It is above the text usually and if not found, return "null". Check the first table first; if not found or the table is empty, check the second table. 
[languages observations]: x, # Get the value from the 'Please specify' line in the 'Areas of Work' column in the same row as the 'Language abilities (spoken)' entry, followed by the value from the 'Assessment/Observation' column in the same row. Only return the text not the integer. If not found, return "null".
[expertise care for infant|children experience – willing?]: x , #yes or no only. Get the value from the 'Willingness' column in the same row as the 'Care of infants/children' entry. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value. If there is no table for 'Areas of work', read through the biodata in Personal skills to get the details. 
[expertise care for infant|children experience]: x , #yes or no only, if the value gets "Experienced" or "Experience", return yes; if invalid or not found, return no. Get the value from the 'Experience' column in the same row as the 'Care of infants/children' entry. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value. If there is no table for 'Areas of work', read through the biodata in Personal skills to get the details. 
[expertise care for infant|children stars]: x, # Get the integer value from the 'Assessment/Observation' column in the same row as the 'Care of infants/children' entry.  Only return the integer value inside the box. If value is N/a, N.a., or Na, return "null". If not found, return "null". Do not guess or infer the value. Check the first table first; if not found or the table is empty, check the second table. 
[expertise care for elderly experience – willing?]: x , #yes or no only. Get the value from the 'Willingness' column in the same row as the 'Care of elderly' entry. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value. If there is no table for 'Areas of work', read through the biodata in Personal skills to get the details. 
[expertise care for elderly experience]: x , #yes or no only, if it says "Experienced" or "Experience", return yes; if invalid or not found, return no. Get the value from the 'Experience' column in the same row as the 'Care for elderly' entry. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value. If there is no table for 'Areas of work', read through the biodata in Personal skills to get the details. 
[expertise care for elderly stars]: x, # Get the integer value from the 'Assessment/Observation' column in the same row as the 'Care of elderly' entry. Only return the integer value inside the box. If value is N/a, N.a., or Na, return "null". If not found, return "null". Do not guess or infer the value. Check the first table first; if not found or the table is empty, check the second table. 
[expertise care for disabled experience – willing?]: x , #yes or no only. Get the value from the 'Willingness' column in the same row as the 'Care of disabled' entry. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value.
[expertise care for disabled experience]: x , #yes or no only, if the value gets "Experienced" or "Experience", return yes; if invalid or not found, return no. Get the value from the 'Experience' column in the same row as the 'Care of disabled' entry. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value. 
[expertise care for disabled stars]: x, # Get the integer value from the 'Assessment/Observation' column in the same row as the 'Care of disabled' entry. Only return the integer value inside the box. If value is N/a, N.a., or Na, return "null". If not found, return "null". Do not guess or infer the value. Check the first table first; if not found or the table is empty, check the second table. 
[expertise general housework experience – willing?]: x , #yes or no only. Get the value from the 'Willingness' column in the same row as the 'General housework' entry. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value. If there is no table for 'Areas of work', read through the biodata in Personal skills to get the details. 
[expertise general housework experience]: x , #yes or no only, if the value gets "Experienced" or "Experience", return yes; if invalid or not found, return no. Get the value from the 'Experience' column in the same row as the 'General housework' entry. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value. If there is no table for 'Areas of work', read through the biodata in Personal skills to get the details. 
[expertise general housework stars]: x, # Get the integer value from the 'Assessment/Observation' column in the same row as the 'General housework' entry. Only return the integer value inside the box. If value is N/a, N.a., or Na, return "null". If not found, return "null". Do not guess or infer the value. Check the first table first; if not found or the table is empty, check the second table. 
[expertise cooking experience – willing?]: x , #yes or no only. Get the value from the 'Willingness' column in the same row as the 'Cooking' entry. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value. If there is no table for 'Areas of work', read through the biodata in Personal skills to get the details. 
[expertise cooking experience]: x , #yes or no only, if the value gets "Experienced" or "Experience", return yes; if invalid or not found, return no. Get the value from the 'Experience' column in the same row as the 'Cooking' entry. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value. If there is no table for 'Areas of work', read through the biodata in Personal skills to get the details. 
[expertise cooking stars]: x, # Get the integer value from the 'Assessment/Observation' column in the same row as the 'Cooking' entry. Only return the integer value inside the box. If value is N/a, N.a., or Na, return "null". If not found, return "null". Do not guess or infer the value. Check the first table first; if not found or the table is empty, check the second table. 
[skills observations]: x, # Get the value from the 'Please specify' line in the 'Areas of Work' column in the same row as the 'Other skills, if any' entry, followed by the value from the 'Assessment/Observation' column in the same row. Only return the text not the integer. If not found, return "null". Check the first table first; if not found or the table is empty, check the second table. 
[additional info able to handle pork?]: x , #yes or no only. Check from the 'Food Handling Preferences' section; if 'Others' is checked on the checkbox or it says 'No Preference', return yes; if 'No Pork' is checked on the checkbox, return no; if blank or not checked, return no. Don't guess this part. If there is no table for 'Areas of work', read through the biodata in Personal skills to get the details. 
[additional info able to eat pork?]: x , #yes or no only, If there is no table for 'Areas of work', read through the biodata in Personal skills to get the details. 
[additional info able to handle beef?]: x , #yes or no only. Check from the 'Food Handling Preferences' section; if 'Others' is checked on the checkbox or it says 'No Preference', return yes; if 'No Beef' is checked on the checkbox, return no; if blank or not checked, return no. Don't guess this part. If there is no table for 'Areas of work', read through the biodata in Personal skills to get the details. 
[additional info able to care dog|cat?]: x , #yes or no only, If there is no table for 'Areas of work', read through the biodata in Personal skills to get the details. 
[additional info able to do gardening work?]: x , #yes or no only, If there is no table for 'Areas of work', read through the biodata in Personal skills to get the details. 
[additional info able to do simple sewing?]: x , #yes or no only, If there is no table for 'Areas of work', read through the biodata in Personal skills to get the  details. 
[additional info willing to wash car?]: x , #yes or no only, If there is no table for 'Areas of work', read through the biodata in Personal skills to get the details. 
[experience singaporean experience]: x, 
#Calculate the years and months only for the periods when the country is SINGAPORE.
#Sum the years and months from these periods.
#If the "Remarks" section in the employment history table states the duration explicitly (in years and/or months), use this information for calculation.
#Return the total duration in the format 'X yr Y mo' or 'X yr'. 
#If no valid data is found, return "null".

[maid introduction]: x, # Identify and extract all details under both the "Any other remarks" and "Other Remarks" sections. Extract all details under the "Other Remarks" section until you encounter a line and under that is 'MDW Name and Signature' or details that are not clearly part of the introduction in Other Remarks. Do not summarize or omit any details. If either "Any other remarks" or "Other Remarks" sections are not found, or if both sections are blank or empty, return "null". Do not guess or introduce any random data.

[maid employment history]: x ,
# Copy all details from "Employment History Overseas table" or "Employment History table" exactly as they appear.
# Include date, country, employer, work duties, and remarks without any alterations.
# the structure like this:
# - date: {date_value}
# - country: {country_value}
# - employer: {employer_value}
# - work duties: {work_duties_value1, work_value2, ..}
# - remarks: {remark_value1}
# If there is no table for Employment History, read through the biodata get all the work experience details. Don't bring random data and random brackets and details.

[maid status]: Published
[employment status id]: x, # Employed|Reserved|Booked|Repatriated|Unemployed. Compare today's date with the employment history dates. If there is no current overlap, return "Unemployed". If not found or invalid, return "Unemployed".
[language mandarin|chinese dialect experience]: x , #mandarin|chinese dialect
[language mandarin|chinese dialect stars]: x , # if not found, return "null"
[experience others experience]: x, # Return in the format '2 yr 6 mo' or '2 yr'. If not found, return "null".